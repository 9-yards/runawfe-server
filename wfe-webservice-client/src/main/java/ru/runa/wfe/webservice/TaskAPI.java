
package ru.runa.wfe.webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-12/14/2009 02:16 PM(ramkris)-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TaskAPI", targetNamespace = "http://impl.service.wfe.runa.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TaskAPI {


    /**
     * 
     * @param batchPresentation
     * @param user
     * @return
     *     returns java.util.List<ru.runa.wfe.webservice.WfTask>
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getMyTasks", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetMyTasks")
    @ResponseWrapper(localName = "getMyTasksResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetMyTasksResponse")
    public List<WfTask> getMyTasks(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "batchPresentation", targetNamespace = "")
        BatchPresentation batchPresentation);

    /**
     * 
     * @param taskId
     * @param user
     */
    @WebMethod
    @RequestWrapper(localName = "markTaskOpened", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.MarkTaskOpened")
    @ResponseWrapper(localName = "markTaskOpenedResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.MarkTaskOpenedResponse")
    public void markTaskOpened(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "taskId", targetNamespace = "")
        Long taskId);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "reassignTask", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.ReassignTask")
    @ResponseWrapper(localName = "reassignTaskResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.ReassignTaskResponse")
    public void reassignTask(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Long arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reassignTasks", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.ReassignTasks")
    @ResponseWrapper(localName = "reassignTasksResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.ReassignTasksResponse")
    public int reassignTasks(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        BatchPresentation arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<ru.runa.wfe.webservice.WfTask>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTasks", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetTasks")
    @ResponseWrapper(localName = "getTasksResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetTasksResponse")
    public List<WfTask> getTasks(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        BatchPresentation arg1);

    /**
     * 
     * @param taskId
     * @param swimlaneActorId
     * @param user
     * @param variables
     */
    @WebMethod
    @RequestWrapper(localName = "completeTaskWS", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.CompleteTaskWS")
    @ResponseWrapper(localName = "completeTaskWSResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.CompleteTaskWSResponse")
    public void completeTaskWS(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "taskId", targetNamespace = "")
        Long taskId,
        @WebParam(name = "variables", targetNamespace = "")
        List<Variable> variables,
        @WebParam(name = "swimlaneActorId", targetNamespace = "")
        Long swimlaneActorId);

    /**
     * 
     * @param includeSubprocesses
     * @param processId
     * @param user
     * @return
     *     returns java.util.List<ru.runa.wfe.webservice.WfTask>
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getProcessTasks", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetProcessTasks")
    @ResponseWrapper(localName = "getProcessTasksResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetProcessTasksResponse")
    public List<WfTask> getProcessTasks(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "processId", targetNamespace = "")
        Long processId,
        @WebParam(name = "includeSubprocesses", targetNamespace = "")
        boolean includeSubprocesses);

    /**
     * 
     * @param previousOwner
     * @param taskId
     * @param newExecutor
     * @param user
     */
    @WebMethod
    @RequestWrapper(localName = "assignTask", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.AssignTask")
    @ResponseWrapper(localName = "assignTaskResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.AssignTaskResponse")
    public void assignTask(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "taskId", targetNamespace = "")
        Long taskId,
        @WebParam(name = "previousOwner", targetNamespace = "")
        WfExecutor previousOwner,
        @WebParam(name = "newExecutor", targetNamespace = "")
        WfExecutor newExecutor);

    /**
     * 
     * @param taskId
     * @param user
     * @return
     *     returns ru.runa.wfe.webservice.WfTask
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getTask", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetTask")
    @ResponseWrapper(localName = "getTaskResponse", targetNamespace = "http://impl.service.wfe.runa.ru/", className = "ru.runa.wfe.webservice.GetTaskResponse")
    public WfTask getTask(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "taskId", targetNamespace = "")
        Long taskId);

}
